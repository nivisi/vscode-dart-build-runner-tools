{
  "name": "dart-build-runner-tools",
  "displayName": "build_runner Tools",
  "description": "Bring build_runner to the context menu & run it on files, folders, part files etc.",
  "version": "1.1.0",
  "publisher": "nivisi",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nivisi/vscode-dart-build-runner-tools"
  },
  "author": {
    "name": "Nikita Sirovskiy"
  },
  "homepage": "https://github.com/nivisi/vscode-dart-build-runner-tools",
  "bugs": {
    "url": "https://github.com/nivisi/vscode-dart-build-runner-tools/issues"
  },
  "engines": {
    "vscode": "^1.67.0"
  },
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "Dart",
    "Flutter",
    "build_runner",
    "code generation"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Dart build_runner Configuration",
      "properties": {
        "dartBuildRunnerTools.deleteConflictingOutputs": {
          "type": "boolean",
          "default": false,
          "description": "Enable or disable the --delete-conflicting-outputs flag for Dart build_runner commands."
        }
      }
    },
    "commands": [
      {
        "command": "dartBuildRunnerTools.buildThisFile",
        "title": "build_runner: Build This File"
      },
      {
        "command": "dartBuildRunnerTools.watchThisFile",
        "title": "build_runner: Watch This File"
      },
      {
        "command": "dartBuildRunnerTools.buildPartFiles",
        "title": "build_runner: Build Part Files"
      },
      {
        "command": "dartBuildRunnerTools.watchPartFiles",
        "title": "build_runner: Watch Part Files"
      },
      {
        "command": "dartBuildRunnerTools.enableDeleteConflictingOutputs",
        "title": "build_runner: Enable Delete Conflicting Outputs"
      },
      {
        "command": "dartBuildRunnerTools.disableDeleteConflictingOutputs",
        "title": "build_runner: Disable Delete Conflicting Outputs"
      },
      {
        "command": "dartBuildRunnerTools.buildWorkspace",
        "title": "Build Workspace",
        "icon": "$(tools)"
      },
      {
        "command": "dartBuildRunnerTools.watchWorkspace",
        "title": "Watch Workspace",
        "icon": "$(eye)"
      },
      {
        "command": "dartBuildRunnerTools.openMenu",
        "title": "build_runner: Menu",
        "icon": "$(tools)"
      }
    ],
    "keybindings": [
      {
        "command": "dartBuildRunnerTools.openMenu",
        "key": "ctrl+b ctrl+r",
        "mac": "ctrl+b ctrl+r"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceExtname == .dart || resourceExtname == ''",
          "command": "dartBuildRunnerTools.buildPartFiles",
          "group": "dartBuildRunnerToolsParts@1"
        },
        {
          "when": "resourceExtname == .dart || resourceExtname == ''",
          "command": "dartBuildRunnerTools.watchPartFiles",
          "group": "dartBuildRunnerToolsParts@2"
        },
        {
          "when": "resourceExtname == .dart || resourceExtname == ''",
          "command": "dartBuildRunnerTools.buildThisFile",
          "group": "dartBuildRunnerToolsThis@1"
        },
        {
          "when": "resourceExtname == .dart || resourceExtname == ''",
          "command": "dartBuildRunnerTools.watchThisFile",
          "group": "dartBuildRunnerToolsThis@2"
        }
      ],
      "commandPalette": [
        {
          "command": "dartBuildRunnerTools.enableDeleteConflictingOutputs",
          "when": "config.dartBuildRunnerTools.deleteConflictingOutputs == false"
        },
        {
          "command": "dartBuildRunnerTools.disableDeleteConflictingOutputs",
          "when": "config.dartBuildRunnerTools.deleteConflictingOutputs == true"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == dart",
          "command": "dartBuildRunnerTools.openMenu",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/js-yaml": "^4.0.9",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.67.0",
    "@typescript-eslint/eslint-plugin": "^7.4.0",
    "@typescript-eslint/parser": "^7.4.0",
    "@vscode/test-cli": "^0.0.8",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^8.57.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "js-yaml": "^4.1.0"
  }
}